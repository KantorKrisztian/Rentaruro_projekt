import { FormEventHandler } from "react";
export interface SharedCommandProps {
    className?: string;
}
export interface CommandProps extends SharedCommandProps {
    children: React.ReactNode;
    open: boolean;
    overlayClassName?: string;
    commandFunction?: FormEventHandler<HTMLFormElement> | (() => void);
    onClose: (value: boolean) => void;
    afterLeave?: () => void;
}
export interface CommandInputProps extends SharedCommandProps {
    placeholder?: string;
    onChange(event: React.ChangeEvent<HTMLInputElement>): void;
    icon?: React.ReactNode;
    inputClassName?: string;
}
export interface CommandOptionProps extends SharedCommandProps {
    value: string | (() => void);
    activeClassName?: string;
    children: React.ReactNode;
}
export interface CommandListProps extends SharedCommandProps {
    children: React.ReactNode;
}
//# sourceMappingURL=commandInterface.d.ts.map